- hosts: all
  become: true
  tasks:

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add the apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add the apt repository for the stable Docker version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
      state: present

  - name: Install Docker and its dependencies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Ensure user group exists
    group:
      name: "{{ ansible_user }}"

  - name: Add user to the docker group
    user:
      name: "{{ ansible_user }}"
      groups: docker,{{ ansible_user }}
      append: yes

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add the apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add the apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Configure --node-ip for kubelet
    lineinfile:
      path: /etc/default/kubelet
      regexp: "^KUBELET_EXTRA_ARGS=.*--node-ip="
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}
      create: yes
    register: kubeletconfig

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
    when: kubeletconfig.changed

  - name: Install Snapd
    become: true
    apt:
      name: "{{ packages }}"
    vars:
      packages:
        - snapd

  - name: Install Helm
    become: true
    snap:
      name: helm
      classic: yes

  handlers:
    - name: helm status
      service: name=helm state=started

    - name: docker status
      service: name=docker state=started

- hosts: master
  tasks:
  - name: Add the apt signing key for Helm
    apt_key:
      url: https://baltocdn.com/helm/signing.asc
      state: present

  - name: Add the apt repository for Helm
    apt_repository:
      repo: deb https://baltocdn.com/helm/stable/debian/ all main
      state: present
      filename: helm-stable-debian.list

  - name: Install Helm
    apt:
      name: "{{ packages }}"
      update_cache: yes
    vars:
      packages:
        - helm

  - name: add Cilium Helm Repo
    command: /snap/bin/helm repo add cilium https://helm.cilium.io
    failed_when: False

