- hosts: all
  tasks:
  - name: Reset all kubeadm state
    become: true
    command: kubeadm reset -f

- hosts: master
  vars:
    pod_cidr: "10.217.0.0/16"
    kubeproxyfree: "strict"
    mode: "directrouting"
    encryption: "no"

  tasks:
  - name: Initialize the Kubernetes cluster with kube-proxy
    become: true
    command: kubeadm init --pod-network-cidr={{ pod_cidr }}  --apiserver-advertise-address={{ node_ip }} --apiserver-cert-extra-sans={{ node_ip }}
    when: kubeproxyfree is defined and kubeproxyfree == "disabled"

  - name: Initialize the Kubernetes cluster without kube-proxy
    become: true
    command: kubeadm init --pod-network-cidr={{ pod_cidr }} --skip-phases=addon/kube-proxy --apiserver-advertise-address={{ node_ip }} --apiserver-cert-extra-sans={{ node_ip }}
    when: kubeproxyfree is not defined or kubeproxyfree != "disabled"

  - name: Setup kubeconfig
    command: "{{ item }}"
    with_items:
     - mkdir -p "$HOME/.kube"
     - sudo cp /etc/kubernetes/admin.conf "$HOME/.kube/config"
     - sudo chown "{{ ansible_user }}:{{ ansible_user }}" "$HOME/.kube/config"

  - name: Install Cilium in direct-routing mode
    command: >
      /snap/bin/helm install cilium cilium/cilium --version 1.8.3
        --namespace kube-system
        --set global.k8sServiceHost={{ node_ip }}
        --set global.k8sServicePort=6443
        --set config.ipam=kubernetes
        --set config.blacklistConflictingRoutes=false
        --set global.kubeProxyReplacement={{ kubeproxyfree | default("strict") }}
        --set global.gke.enabled=true
        --set global.nativeRoutingCIDR=10.0.0.0/8
        --set global.autoDirectNodeRoutes=true
    when: mode == "directrouting" and encryption == "no"

  - name: Install Cilium in VXLAN tunneling mode
    command: >
      /snap/bin/helm install cilium cilium/cilium --version 1.8.3
        --namespace kube-system
        --set global.k8sServiceHost={{ node_ip }}
        --set global.k8sServicePort=6443
        --set config.ipam=kubernetes
        --set config.blacklistConflictingRoutes=false
        --set global.kubeProxyReplacement={{ kubeproxyfree | default("strict") }}
    when: mode == "tunneling" and encryption == "no"

  - name: Generate keys
    script: ../scripts/cilium-gen-keys.sh
    when: encryption == "yes"

  - name: Install Cilium using Encryption (routing mode)
    command: >
      /snap/bin/helm install cilium cilium/cilium --version 1.8.3
        --namespace kube-system
        --set global.k8sServiceHost={{ node_ip }}
        --set global.k8sServicePort=6443
        --set config.ipam=kubernetes
        --set config.blacklistConflictingRoutes=false
        --set global.kubeProxyReplacement={{ kubeproxyfree | default("strict") }}
        --set global.nativeRoutingCIDR=10.0.0.0/8
        --set global.autoDirectNodeRoutes=true
        --set global.gke.enabled=true
        --set global.hostServices.nodePort.enabled=false
        --set global.encryption.enabled=true
        --set global.encryption.nodeEncryption=false
        --set global.encryption.interface=enp1s0f1
    when: encryption == "yes" and mode == "directrouting"

  - name: Generate the kubeadm join command
    command: kubeadm token create --print-join-command
    register: join_command

  - name: Copy the kubeadm join command to a local file
    local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

  - name: Allow scheduling pods on the control-plane node
    command: kubectl taint nodes {{ master }} node-role.kubernetes.io/master-

- hosts: nodes
  become: true
  tasks:
  - name: Copy the kubadm join command to the node
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to the cluster
    command: sh /tmp/join-command.sh
